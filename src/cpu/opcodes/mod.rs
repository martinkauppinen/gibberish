use crate::cpu::Cpu;
mod dec_register;
mod inc_register;

pub struct OpCode<'a>(
    /// Mnemonic
    pub &'a str,
    /// Function to call
    pub fn(&mut Cpu),
    /// Instruction size (bytes)
    pub u8,
    /// Machine cycles
    pub u8,
);

#[rustfmt::skip]
pub const OPCODES: [OpCode; 256] = [
    // 0x0_
    OpCode("NOP"          , nop,                  1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("INC BC"       , inc_register::bc,     1, 2),
    OpCode("INC B"        , inc_register::b,      1, 1),
    OpCode("DEC B"        , dec_register::b,      1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("DEC BC"       , dec_register::bc,     1, 2),
    OpCode("INC C"        , inc_register::c,      1, 1),
    OpCode("DEC C"        , dec_register::c,      1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),

    // 0x1_
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("INC DE"       , inc_register::de,     1, 2),
    OpCode("INC D"        , inc_register::d,      1, 1),
    OpCode("DEC D"        , dec_register::d,      1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("DEC DE"       , dec_register::de,     1, 2),
    OpCode("INC E"        , inc_register::e,      1, 1),
    OpCode("DEC E"        , dec_register::e,      1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),

    // 0x2_
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("INC HL"       , inc_register::hl,     1, 2),
    OpCode("INC H"        , inc_register::h,      1, 1),
    OpCode("DEC H"        , dec_register::h,      1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("DEC HL"       , dec_register::hl,     1, 2),
    OpCode("INC L"        , inc_register::l,      1, 1),
    OpCode("DEC L"        , dec_register::l,      1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),

    // 0x3_
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("INC SP"       , inc_register::sp,     1, 2),
    OpCode("INC (HL)"     , inc_register::hl_ind, 1, 3),
    OpCode("DEC (HL)"     , dec_register::hl_ind, 1, 3),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("DEC SP"       , dec_register::sp,     1, 2),
    OpCode("INC A"        , inc_register::a,      1, 1),
    OpCode("DEC A"        , dec_register::a,      1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),

    // 0x4_
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),

    // 0x5_
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),

    // 0x6_
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),

    // 0x7_
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),

    // 0x8_
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),

    // 0x9_
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),

    // 0xA_
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),

    // 0xB_
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),

    // 0xC_
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),

    // 0xD_
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),

    // 0xE_
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),

    // 0xF_
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
    OpCode("UDF"          , undefined,            1, 1),
];

fn undefined(_: &mut Cpu) {
    unimplemented!();
}

/// Half carry flag is set if the upper nybble
/// changed due to an arithmetic operation
fn half_carry(old: u8, new: u8) -> bool {
    old & 0xf0 != new & 0xf0
}

/// 0x00: No operation
/// - - - -
fn nop(_: &mut Cpu) {
}
